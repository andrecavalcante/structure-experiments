Tensor type:  <class 'torch.cuda.FloatTensor'>
[[3, 32, 32], (64, 16, 16), (128, 8, 8), (256, 3, 3), (256, 1, 1)]
IndependenceAdversary (
  (adversary): Adversary (
    (layers): ModuleList (
      (0): Linear (50 -> 50)
      (1): Linear (50 -> 50)
      (2): Linear (50 -> 50)
      (3): Linear (50 -> 1)
    )
  )
)
IndependentAutoencoder (
  (inference): DeterministicTinyDCGANFirstInference (
    (convs): ModuleList (
      (0): Conv2d(3, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
      (1): Conv2d(64, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
      (2): Conv2d(128, 256, kernel_size=(3, 3), stride=(2, 2))
      (3): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1))
    )
    (bns): ModuleList (
      (0): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True)
      (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
      (2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True)
    )
    (input_lin): Linear (256 -> 50)
    (lin_mu): Linear (50 -> 50)
  )
  (generator): DeterministicTinyDCGANGenerator (
    (lins): ModuleList (
      (0): Linear (50 -> 900)
    )
    (convs): ModuleList (
      (0): ConvTranspose2d(1, 256, kernel_size=(3, 3), stride=(1, 1))
      (1): ConvTranspose2d(256, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (2): ConvTranspose2d(128, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (3): ConvTranspose2d(64, 6, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    )
    (bns): ModuleList (
      (0): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True)
      (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
      (2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True)
    )
  )
)
This network name is already in use. Continuing will delete all of the files in the directory.
Files: 
results/pred-slurm_no-git_seq-len_5_image-width_32_adversarial-weight_1/opt.json
results/pred-slurm_no-git_seq-len_5_image-width_32_adversarial-weight_1/results.csv

Continue? [Y/n] 